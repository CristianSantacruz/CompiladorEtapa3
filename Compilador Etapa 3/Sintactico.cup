package compilador.etapa.pkg3;

import java_cup.runtime.*;
import java.io.FileReader;
import javax.swing.JOptionPane;

parser code {:
    
    /* Reporte de error encontrado. */
    public void report_error(String message, Object info) {
        StringBuilder m = new StringBuilder("Error");
        if (info instanceof java_cup.runtime.Symbol) {
            java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
            if (s.left >= 0) {                
                m.append(" in line "+(s.left+1));
                if (s.right >= 0)
                    m.append(", column "+(s.right+1));
            }
        }
        m.append(" : "+message);
        System.err.println(m);
        JOptionPane.showMessageDialog(null,m);
    }
   
    /* Cuando se encuentra un error de donde el sistema no puede
        recuperarse, se lanza un error fatal. Se despliega el mensaje
        de error y se finaliza la ejecucion. */
    public void report_fatal_error(String message, Object info) {
        report_error(message, info);
        System.exit(1);
    }

    /* Metodo main para garantizar la ejecucion del analizador
       lexico y sintactico, ademas que se pase como parametro la tabla
       de simbolos correspondiente. */
    public static void main(String[] args){
        try {
            AnalizadorSintactico asin = new AnalizadorSintactico(
                    new AnalizadorLexico( new FileReader(args[0])));
            Object result = asin.parse().value;
            System.out.println("\n*** Resultados finales ***");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
:};
   

terminal String SUMA, RESTA, MULTIPLICACION, DIVISION, AUMENTAR, DISMINUIR, ASIGNADOR,MAYOR, MENOR, IGUAL, MAYORIGUAL, MENORIGUAL;
terminal String SI, SINO, NO, NOIGUAL, PARA, MIENTRAS, VOID,MAIN, T_ENTERO, T_DECIMAL, T_BOLEANO;
terminal String IDENTIFICADOR, KEYWORD, CARACTER, ENTERO, FLOTANTE, BOOL, CHAR;
terminal String ALLAVE, CLLAVE, PYCOMA, COMA, CPAREN, APAREN, ACORCH, CCORCH;

non terminal programa, principal, lineascodigos, lineacodigo, linea, invocarmetodo, parametrosenvio, parenvio, penvio;
non terminal valor, crearvariable, tipodato, asignarvalor, operasignacion, aritmetico, oprcomun, tipoopr, oprcomplemento;
non terminal oprcom, incredismivariable, indis, cambiarvalor, cambvalor, buclecondicion, condicionif, condicionsi, condicion;
non terminal condicional, condicionno, condicionessino, condicionsino, buclefor, iniciafor, buclewhile, funciones, funcion;
non terminal tiporetorno, parametrosin, parametros, parametro;


programa		::= principal funciones | principal;

principal		::= T_ENTERO MAIN APAREN CPAREN ALLAVE lineascodigos CLLAVE;

lineascodigos		::= lineacodigo |;

lineacodigo		::= lineacodigo linea | linea;

linea			::= invocarmetodo PYCOMA | crearvariable PYCOMA | cambiarvalor PYCOMA | buclecondicion;

invocarmetodo		::= IDENTIFICADOR APAREN parametrosenvio CPAREN;

parametrosenvio		::= parenvio |;

parenvio		::= parenvio PYCOMA penvio | penvio;

penvio			::= valor | IDENTIFICADOR;

valor			::= ENTERO | FLOTANTE | BOOL;

crearvariable		::= tipodato IDENTIFICADOR | tipodato IDENTIFICADOR asignarvalor;

tipodato		::= T_ENTERO | T_DECIMAL | T_BOLEANO;

asignarvalor		::= ASIGNADOR operasignacion | ASIGNADOR valor | ASIGNADOR IDENTIFICADOR;

operasignacion		::= aritmetico | invocarmetodo | incredismivariable;

aritmetico		::= oprcomun | oprcomun oprcomplemento;

oprcomun		::= valor tipoopr valor | valor tipoopr IDENTIFICADOR | IDENTIFICADOR tipoopr valor | IDENTIFICADOR tipoopr IDENTIFICADOR;

tipoopr 		::= SUMA | RESTA | MULTIPLICACION | DIVISION;

oprcomplemento		::= oprcomplemento oprcom | oprcom;

oprcom			::= tipoopr valor | tipoopr IDENTIFICADOR;

incredismivariable	::= IDENTIFICADOR indis;

indis			::= AUMENTAR | DISMINUIR;

cambiarvalor		::= IDENTIFICADOR ASIGNADOR cambvalor;

cambvalor		::= valor | operasignacion | IDENTIFICADOR;

buclecondicion		::= condicionif | buclefor | buclewhile;

condicionif		::= condicionsi | condicionsi condicionno | condicionsi condicionessino condicionno;

condicionsi		::= SI APAREN condicion CPAREN ALLAVE lineascodigos CLLAVE;

condicion		::= valor condicional valor | valor condicional IDENTIFICADOR | IDENTIFICADOR condicional valor | IDENTIFICADOR condicional IDENTIFICADOR;

condicional		::= MAYOR | MENOR | IGUAL | MAYORIGUAL | MENORIGUAL | NOIGUAL;

condicionno		::= NO ALLAVE lineascodigos CLLAVE;

condicionessino		::= condicionessino condicionsino | condicionsino;

condicionsino		::= SINO APAREN condicion CPAREN ALLAVE lineascodigos CLLAVE;

buclefor		::= PARA APAREN iniciafor PYCOMA condicion PYCOMA incredismivariable CPAREN ALLAVE lineascodigos CLLAVE;

iniciafor		::= tipodato IDENTIFICADOR asignarvalor;

buclewhile		::= MIENTRAS APAREN condicion CPAREN ALLAVE lineascodigos CLLAVE;

funciones		::= funciones funcion | funcion;

funcion			::= tiporetorno IDENTIFICADOR APAREN parametrosin CPAREN ALLAVE lineascodigos CLLAVE;

tiporetorno 		::= tipodato | VOID;

parametrosin		::= parametros |;

parametros		::= parametros PYCOMA parametro | parametro;

parametro		::= tipodato IDENTIFICADOR;